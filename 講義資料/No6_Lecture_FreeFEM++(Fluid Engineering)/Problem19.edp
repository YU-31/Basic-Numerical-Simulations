border a0(t=5,0){ x=0; y=t; label=2;}  //in
border a1(t=0,10){ x=t; y=0; label=1;} //bottom
border a2(t=0,5){ x=10; y=t; label=3;} //out
border a3(t=10,0){ x=t; y=5; label=1;} //top
border a4(t=0,-2*pi){ x=5+cos(t); y=2.5+sin(t); label=1;} //circle

int n=3;
mesh Th = buildmesh( a0(10*n)+a1(10*n)+a2(10*n)+a3(10*n)+a4(10*n));

plot(Th, wait=1);

fespace Vh1(Th,P2);
fespace Vh2(Th,P1);

int Re = 10;
real dt = 0.05;
int i;

Vh1 u1, u2, v1, v2;
Vh2 p, q, up1, up2;

problem Prob([u1, u2, p], [v1, v2, q], solver=UMFPACK, init=i)
    =int2d(Th) //navie-stokes equation
        (
            u1*v1 / dt + u2*v2 / dt
            + 1/Re * (dx(u1)*dx(v1) + dy(u1)*dy(v1) + dx(u2)*dx(v2) + dy(u2)*dy(v2))
            - p * (dx(v1) + dy(v2))
            - q * (dx(u1) + dy(u2))
        )
    - int2d(Th)
        (
            (v1 * convect([up1, up2], -dt, up1) + v2  * convect([up1, up2], -dt, up2)) / dt
        )
    +on(1, u1=0, u2=0) //boundary conditions
    +on(2, u1=-y*(y-5), u2=0);

for (i=0; i<1000; i++)
    {
        up1 = u1;
        up2 = u2;

        Prob;

        plot([u1,u2]);
    };